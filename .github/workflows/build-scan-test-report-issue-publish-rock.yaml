name: Build, scan, and test ROCK

on:
  workflow_call:
    inputs:
      report-vulnerabilities:
        description: "Whether to report security vulnerabilities through Github issues."
        required: false
        default: false
        type: boolean
      rock-dir:
        description: "Path to rock directory, i.e. directory containing rockcraft.yaml"
        required: true
        type: string
      rockcraft-channel:
        description: "Rockcraft channel e.g. latest/stable"
        required: true
        default: "latest/stable"
        type: string
      microk8s-channel:
        description: "Microk8s channel e.g. 1.26/stable"
        required: true
        default: "1.26/stable"
        type: string
      juju-channel:
        description: "Juju channel e.g. 3.1/stable"
        required: true
        default: "3.1/stable"
        type: string
      python-version:
        description: "Version of python to use for integration tests. If empty, it will use machine's default"
        default: ""
        required: false
        type: string
      severity:
        description: "Comma separated list of severities of vulnerabilities to scanned for and displayed"
        required: false
        type: string
        default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
jobs:
  build:
    uses: ./.github/workflows/build-rock.yaml
    with:
      rock-dir: ${{ inputs.rock-dir }}
      rockcraft-channel: ${{ inputs.rockcraft-channel }}

  scan:
    needs: build
    uses: ./.github/workflows/scan-rock.yaml
    secrets: inherit
    with:
      rock-artifact: ${{ needs.build.outputs.rock-artifact}}
      rock-reference: ${{ needs.build.outputs.rock-reference }}
      rock-filename: ${{ needs.build.outputs.rock-filename }}
      report-vulnerabilities: ${{ inputs.report-vulnerabilities }}
      severity: ${{ inputs.severity }}

  report-vulnerability:
    needs: [scan, build]
    uses: ./.github/workflows/report-vulnerability-in-gh.yaml
    secrets: inherit
    if: ${{ always() && (needs.scan.result == 'failure' && needs.build.result == 'success') }}
    with:
      issue-title: 'Vulnerabilities found for'
      rock-reference: ${{ needs.build.outputs.rock-reference }}

  sanity-tests:
    needs: build
    uses: ./.github/workflows/sanity-test-rock.yaml
    with:
      tests-dir: ${{ inputs.rock-dir }}
      rock-artifact: ${{ needs.build.outputs.rock-artifact}}
      rock-reference: ${{ needs.build.outputs.rock-reference }}
      rock-filename: ${{ needs.build.outputs.rock-filename }}

  integration-tests:
    needs: build
    uses: ./.github/workflows/integration-test-rock.yaml
    with:
      tests-dir: ${{ inputs.rock-dir }}
      rock-artifact: ${{ needs.build.outputs.rock-artifact}}
      rock-reference: ${{ needs.build.outputs.rock-reference }}
      rock-filename: ${{ needs.build.outputs.rock-filename }}
      microk8s-channel: ${{ inputs.microk8s-channel }}
      juju-channel: ${{ inputs.juju-channel }}
      python-version: ${{ inputs.python-version }}

  publish:
    if: ${{ github.event_name == 'push' }}
    needs: [scan, build, sanity-tests, integration-tests]
    uses: ./.github/workflows/publish-rock.yaml
    secrets: inherit
    with:
      rock-artifact: ${{ needs.build.outputs.rock-artifact}}
      rock-reference: ${{ needs.build.outputs.rock-reference }}
      rock-filename: ${{ needs.build.outputs.rock-filename }}
      registry: "charmedkubeflow"
