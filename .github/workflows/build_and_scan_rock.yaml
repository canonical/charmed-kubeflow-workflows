name: Build and scan ROCK, save and send scan report

on:
  workflow_call:
    secrets:
      JIRA_URL:
        required: true
    inputs:
      rock:
        description: "Path to rock directory, i.e. directory containing rockcraft.yaml"
        default: "."
        required: true
        type: string

jobs:
  build-scan-rock:
    runs-on: ubuntu-20.04
    name: Build and scan ROCK
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install tools
        run: |
          sudo snap install jq
          sudo snap install yq
      - name: Build ROCK
        uses: canonical/craft-actions/rockcraft-pack@main
        with:
          path: ${{ inputs.rock }}
      - name: Copy ROCK to Docker
        id: rock_in_docker
        run: |
          NAME=$(yq eval ".name" rockcraft.yaml)
          VERSION=$(yq eval ".version" rockcraft.yaml)
          ARCH=$(yq eval ".platforms | keys" rockcraft.yaml | awk -F ' ' '{print $2}')
          ROCK="${NAME}_${VERSION}_${ARCH}"
          sudo skopeo --insecure-policy copy oci-archive:$ROCK.rock docker-daemon:$ROCK:$VERSION
          echo "image=$ROCK:$VERSION" >> "$GITHUB_OUTPUT"
        working-directory: ${{ inputs.rock }}
      - name: Scan for vulnerabilities
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: '${{ steps.rock_in_docker.outputs.image }}'
          format: 'json'
          output: '${{ inputs.rock }}/trivy-report-${{ inputs.rock }}.json'
          ignore-unfixed: true
      - name: Send vulnerability records
        run: |
            # get script that sends scan results from Kubeflow CI repo
            CI_REPO="https://github.com/canonical/kubeflow-ci.git"
            mkdir -p kubeflow-ci
            cd kubeflow-ci
            git init -q
            git remote add -f origin "$CI_REPO" &> /dev/null
            git sparse-checkout set scripts/cve-reports/send-scan.py
            git pull -q origin main
            cd -

            # send scans from supplied directory
            ./kubeflow-ci/scripts/cve-reports/send-scan.py --report-path=${{ inputs.rock }} --jira-url=${{ secrets.JIRA_URL }}
      - name: Prepare artifacts
        run: |
          tar zcvf trivy-report-${{ inputs.rock }}.tar.gz trivy-report-${{ inputs.rock }}.json
        working-directory: ${{ inputs.rock }}
      - name: Upload Trivy reports
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report-${{ inputs.rock }}
          path: ${{ inputs.rock }}/trivy-report-${{ inputs.rock }}.tar.gz

