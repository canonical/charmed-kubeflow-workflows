# Based on https://github.com/canonical/sunbeam-terraform/blob/9973905d24892903fab19ce691bbc5c28c53df0a/.github/workflows/deploy.yml
# For usage, refer to templates/terraform-deploy-usage-template.yaml
name: Deploy Terraform module

on:
  workflow_call:
    inputs:
      working-directory:
        description: The directory that stores the Terraform module. Defaults to `./terraform`.
        required: false
        type: string
        default: ./terraform
      model:
        description: The model that the charm is deployed on. Defaults to `testing`.
        required: false
        type: string
        default: testing
      channel:
        description: The channel that the charm is deployed from. Defaults to `latest/stable`.
        required: false
        type: string
        default: latest/stable
      workload-check:
        description: If true, pass `-w` as an argument to juju-wait. This means it will wait for the unit to go to active. It defaults to false since most of kubeflow charms have other depenndencies required in order for them to be active.
        required: false
        type: boolean
        default: false

jobs:
  deploy:
    name: Deploy Terraform
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.29-strict/stable
          microk8s-addons: "dns storage rbac metallb:10.64.140.43-10.64.140.49"
          juju-channel: 3.4/stable
          charmcraft-channel: latest/candidate
      - name: Install dependencies
        run: |
          sudo snap install --classic terraform
          sudo snap install --classic juju-wait
      - name: Create juju model
        run: juju add-model ${{ inputs.model }}
      - name: Apply terraform
        run: |
          cd ${{ inputs.working-directory }}
          terraform init
          terraform apply -var "channel=${{ inputs.channel }}" -var "model_name=${{ inputs.model }}" --auto-approve
          if [ "${{ inputs.workload-check }}" = false ]; then
            juju-wait -v -m ${{ inputs.model }} -t 3600
          else
            juju-wait -vw -m ${{ inputs.model }} -t 3600
          fi

      - name: Collect juju status
        if: always()
        run: |
          juju status -m ${{ inputs.model }}
          juju debug-log -m ${{ inputs.model }} --replay
