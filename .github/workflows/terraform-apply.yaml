# Based on https://github.com/canonical/sunbeam-terraform/blob/9973905d24892903fab19ce691bbc5c28c53df0a/.github/workflows/deploy.yml
# For usage, refer to examples/terraform-apply-usage-template.yaml
# Applies terraform module and wait for the application to go active or blocked.
name: Apply Terraform module

on:
  workflow_call:
    inputs:
      model:
        description: The model that the charm is deployed on. Defaults to `testing`.
        required: false
        type: string
        default: tf-testing
      channel:
        description: The channel that the charm is deployed from. Defaults to `latest/stable`.
        required: false
        type: string
        default: null
      module-directory:
        description: The directory that stores the Terraform module. Defaults to `./terraform`.
        required: false
        type: string
        default: ./terraform

jobs:
  apply:
    name: Apply Terraform
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.32-strict/stable
          microk8s-addons: "dns hostpath-storage rbac metallb:10.64.140.43-10.64.140.49"
          juju-channel: 3.6/stable
          charmcraft-channel: 3.x/stable
      - name: Install dependencies
        run: |
          sudo snap install --classic terraform
      - name: Create juju model
        run: juju add-model ${{ inputs.model }}
      - name: Apply terraform
        working-directory: ${{ inputs.module-directory }}
        run: |
          terraform init

          ARGS=""

          if [ -n "${{ inputs.channel }}" ]
          then
            ARGS="${ARGS} -var \"channel=${{ inputs.channel }}\""
          fi

          if [ -n "${{ inputs.model }}" ]
          then
            ARGS="${ARGS} -var \"model_name=${{ inputs.model }}\""
          fi

          echo "Arguments to be fed to apply command: ${ARGS}"

          terraform apply ${ARGS} --auto-approve
      - name: Wait for the application to be active or blocked
        run: |
          # Check status of the unit instead of application due to https://github.com/juju/juju/issues/18625
          juju wait-for model ${{ inputs.model }} --query="forEach(units, unit => (unit.workload-status == 'active' || unit.workload-status == 'blocked'))"
      - name: Juju status
        run: juju status
      - name: Dump logs
        if: failure()
        uses: canonical/charming-actions/dump-logs@2.6.3
