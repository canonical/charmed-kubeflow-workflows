name: Scan

on:
  workflow_call:
    inputs:
      rock-dir:
        description: "Path to rock directory, i.e. directory containing rockcraft.yaml"
        required: true
        type: string
      rock-filename:
        description: "Filename of .rock file produced"
        required: true
        type: string
      source-branch:
        description: Github branch to checkout. If blank, it will use default values.
        default: '' # For default behaviour, see https://github.com/actions/checkout/tree/v4/#usage
        required: false
        type: string
jobs:
  scan:
    name: Scan ${{ inputs.rock-dir }}
    runs-on: ubuntu-22.04
    steps:
      # Ideally we'd use self-hosted runners, but this effort is still not stable.
      # This action will remove unused software (dotnet, haskell, android libs, codeql,
      # and docker images) from the GH runner, which will liberate around 60 GB of storage
      # distributed in 40GB for root and around 20 for a mnt point.
      - name: Maximise GH runner space
        uses: easimon/maximize-build-space@v7
        with:
          root-reserve-mb: 40960
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
          remove-codeql: 'true'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.source-branch }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.rock-dir }}
          path: ${{ inputs.rock-dir }}/

      - name: Export ROCK to Docker
        id: rock_in_docker
        run: |
          NAME=$(yq eval ".name" rockcraft.yaml)
          VERSION=$(yq eval ".version" rockcraft.yaml)
          DOCKER_IMAGE=$NAME:$VERSION
          sudo skopeo --insecure-policy copy oci-archive:${{ inputs.rock-filename}} docker-daemon:DOCKER_IMAGE
          echo "image=$DOCKER_IMAGE" >> "$GITHUB_OUTPUT"
        working-directory: ${{ inputs.rock-dir }}

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Scan for vulnerabilities
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: '${{ steps.rock_in_docker.outputs.image }}'
          format: 'json'
          output: '${{ inputs.rock-dir }}/trivy-report-${{ inputs.rock-dir }}.json'
          ignore-unfixed: true

      - name: Print vulnerabilities report
        run: cat ${{ inputs.rock-dir }}/trivy-report-${{ inputs.rock-dir }}.json

      - name: Upload Trivy reports
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report-${{ inputs.rock-dir }}
          path: ${{ inputs.rock-dir }}/trivy-report-${{ inputs.rock-dir }}.json
