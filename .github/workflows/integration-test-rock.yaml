name: Integration tests

on:
  workflow_call:
    inputs:
      tests-dir:
        description: "Path to tests directory"
        required: true
        type: string
      rock-artifact:
        description: "Name of the artifact from which the ROCK will be downloaded."
        required: true
        type: string
      rock-reference:
        description: "Rock reference to be used in order to copy the image to docker cache.
          It consists of <rock-name>:<rock-version>."
        required: true
        type: string
      rock-filename:
        description: "Filename of the .rock file"
        required: true
        type: string
      microk8s-channel:
        description: "Microk8s channel e.g. 1.26/stable"
        required: true
        default: "1.26/stable"
        type: string
      juju-channel:
        description: "Juju channel e.g. 3.1/stable"
        required: true
        default: "3.1/stable"
        type: string
      source-branch:
        description: "Github branch to checkout. If blank, it will use default values."
        default: '' # For default behaviour, see https://github.com/actions/checkout/tree/v4/#usage
        required: false
        type: string
      python-version:
        description: "Version of python to install. If empty, the workflow will not install and will use machine's default"
        default: ""
        required: false
        type: string

jobs:
  tests:
    name: Test ${{ inputs.rock-reference }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.source-branch }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.rock-artifact }}

      # Remove once https://github.com/canonical/bundle-kubeflow/issues/761
      # is resolved and applied to all ROCKs repositories
      - name: Install python version from input
        if: ${{ inputs.python-version }}
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt update -y
          VERSION=${{ inputs.python-version }}
          sudo apt install python${{ inputs.python-version }} python${{ inputs.python-version }}-distutils python${{ inputs.python-version }}-venv -y
          wget https://bootstrap.pypa.io/get-pip.py
          python${{ inputs.python-version }} get-pip.py
          python${{ inputs.python-version }} -m pip install tox

      - name: Export ROCK to Docker
        id: rock_in_docker
        run: |
          sudo skopeo --insecure-policy copy oci-archive:${{ inputs.rock-filename }} docker-daemon:${{ inputs.rock-reference }}
          echo "image=${{ inputs.rock-reference }}" >> "$GITHUB_OUTPUT"

      - name: Clean up .rock file
        run: rm ${{ inputs.rock-filename }}

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
            provider: microk8s
            channel: ${{ inputs.microk8s-channel }}
            charmcraft-channel: latest/candidate
            microk8s-addons: "dns hostpath-storage rbac ingress metallb:10.64.140.43-10.64.140.49"
            juju-channel: ${{ inputs.juju-channel }}

      - name: Integration tests
        run: |
          if [[ "${{ inputs.python-version }}" ]]
          then
            python${{ inputs.python-version }} -m tox -e integration
          else
            tox -e integration
          fi
        working-directory: ./${{ inputs.tests-dir }}

      - name: Save debug artifacts
        if: failure() || cancelled()
        uses: canonical/kubeflow-ci/actions/dump-charm-debug-artifacts@main

      - name: Setup Debug Artifact Collection
        if: failure() || cancelled()
        run: mkdir tmp

      - name: Collect charmcraft logs
        if: failure() || cancelled()
        run: |
          cat /home/runner/.local/state/charmcraft/log/charmcraft-*.log | tee tmp/charmcraft.log

      - name: Collect Juju status
        if: failure() || cancelled()
        run: juju status | tee tmp/juju-status.txt

      - name: Collect Juju log
        if: failure() || cancelled()
        run: juju debug-log --replay --no-tail | tee tmp/juju-status.txt

      - name: Collect Kube status
        if: failure() || cancelled()
        run: |
          kubectl get all -A | tee tmp/kube-summary.txt
          kubectl describe pods -A | tee tmp/kube-pods.txt
          kubectl describe virtualservices -A | tee tmp/kube-virtualservices.txt
          kubectl describe gateways -A | tee tmp/kube-gateways.txt
          kubectl describe deployments -A | tee tmp/kube-deployments.txt
          kubectl describe replicasets -A | tee tmp/kubectl-replicasets.txt

      - name: Upload debug artifacts
        if: failure() || cancelled()
        uses: actions/upload-artifact@v3
        with:
          name: test-run-artifacts
          path: tmp
