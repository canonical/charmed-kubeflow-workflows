name: Publish ROCK

on:
  workflow_call:
    inputs:
      rock-artifact:
        description: "Name of the artifact from which the ROCK will be downloaded."
        required: true
        type: string
      rock-filename:
        description: "Filename of the .rock file"
        required: true
        type: string
      full-image-tag:
        description: "Full image tag to publish (e.g. docker.io/org/rock:version-commit)"
        required: true
        type: string
      source-branch:
        description: "GitHub branch to checkout. If blank, it will use the default branch of the repository."
        default: ''
        required: false
        type: string

jobs:
  publish-rock:
    name: Publish ${{ inputs.full-image-tag }}
    runs-on: ubuntu-24.04
    outputs:
      published-image: ${{ steps.push.outputs.image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.source-branch }}

      - name: Install Rockcraft
        run: sudo snap install rockcraft --classic

      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.rock-artifact }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Export ROCK to Docker
        run: |
          echo "Exporting image to Docker: ${{ inputs.full-image-tag }}"
          sudo rockcraft.skopeo --insecure-policy copy \
            oci-archive:${{ inputs.rock-filename }} \
            docker-daemon:${{ inputs.full-image-tag }}

      - name: Publish to Docker Hub
        id: push
        run: |
          IMAGE="${{ inputs.full-image-tag }}"
          echo "Checking if image exists: $IMAGE"
          IMAGE_EXISTS=$(docker manifest inspect "$IMAGE" > /dev/null 2>&1 ; echo $?)

          if [[ "$IMAGE_EXISTS" == "0" ]]; then
            echo "Image $IMAGE already exists in Docker Hub â€” skipping push."
            exit 1
          else
            echo "Pushing image to Docker Hub: $IMAGE"
            docker push "$IMAGE"
          fi

          echo "image=$IMAGE" >> "$GITHUB_OUTPUT"
