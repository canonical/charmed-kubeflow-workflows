name: Publish ROCK

on:
  workflow_call:
    inputs:
      rock-dir:
        description: "Path to rock directory, i.e. directory containing rockcraft.yaml"
        required: true
        type: string
      path-to-rock-file:
        description: "Path to .rock file produced"
        required: true
        type: string
      source-branch:
        description: Github branch to checkout. If blank, it will use default values.
        default: '' # For default behaviour, see https://github.com/actions/checkout/tree/v4/#usage
        required: false
        type: string
jobs:
  publish-rock:
    name: Publish ${{ inputs.rock-dir }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.source-branch }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.rock-dir }}
          path: ${{ inputs.rock-dir }}/

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Copy rock and publish to Dockerhub
        id: rock_in_docker
        run: |
          NAME=$(yq eval ".name" rockcraft.yaml)
          VERSION=$(yq eval ".version" rockcraft.yaml)
          COMMIT_ID=$(git rev-parse --short HEAD)
          REGISTRY="charmedkubeflow"
          DOCKER_IMAGE=$NAME:$VERSION-$COMMIT_ID
          ROCK=$(echo ${{ inputs.path-to-rock-file }} | sed 's:.*/::')
          sudo skopeo --insecure-policy copy oci-archive:$ROCK docker-daemon:$REGISTRY/$DOCKER_IMAGE

          # Check if image already exists on dockerhub and publish
          # Returns 0 if exists, 1 if it doesn't
          IMAGE_EXISTS=$(docker manifest inspect $REGISTRY/$DOCKER_IMAGE > /dev/null ; echo $?)
          if [[ $IMAGE_EXISTS = 0 ]]
          then
            echo "Image $DOCKER_IMAGE already exists in dockerhub registry $REGISTRY"
            exit 1
          else
            docker push $REGISTRY/$DOCKER_IMAGE
          fi
        working-directory: ${{ inputs.rock-dir }}
