name: Publish ROCK

on:
  workflow_call:
    inputs:
      rock-filename:
        description: "Filename of the .rock file to be tested"
        required: true
        type: string
      rock-name:
        description: "Field name of the rockcraft.yaml file to be tested"
        required: true
        type: string
      rock-version:
        description: "Field version of the rockcraft.yaml file to be tested"
        required: true
        type: string
      registry:
        description: "Registry where the image will be published"
        required: true
        type: string
      source-branch:
        description: Github branch to checkout. If blank, it will use default values.
        default: '' # For default behaviour, see https://github.com/actions/checkout/tree/v4/#usage
        required: false
        type: string
jobs:
  publish-rock:
    name: Publish ${{ inputs.rock-filename }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.source-branch }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.rock-filename }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Export ROCK to Docker
        id: rock_in_docker
        run: |
          COMMIT_ID=$(git rev-parse --short HEAD)
          DOCKER_IMAGE=${{ inputs.rock-name }}:${{ inputs.rock-version }}-$COMMIT_ID
          sudo skopeo --insecure-policy copy oci-archive:${{ inputs.rock-filename }} docker-daemon:${{ inputs.registry }}/$DOCKER_IMAGE
          echo "image=$DOCKER_IMAGE" >> "$GITHUB_OUTPUT"

      - name: Publish to dockerhub
        run: |
          # Check if image already exists on dockerhub and publish
          # Returns 0 if exists, 1 if it doesn't
          IMAGE_EXISTS=$(docker manifest inspect ${{ inputs.registry }}/${{ steps.rock_in_docker.outputs.image }} > /dev/null ; echo $?)
          if [[ "$IMAGE_EXISTS" == "0" ]]
          then
            echo "Image ${{ steps.rock_in_docker.outputs.image }} already exists in dockerhub registry ${{ inputs.registry }}"
            exit 1
          else
            docker push ${{ inputs.registry }}/${{ steps.rock_in_docker.outputs.image }}
          fi
